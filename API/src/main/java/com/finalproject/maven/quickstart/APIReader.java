package com.finalproject.maven.quickstart;

import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;

import javax.lang.model.element.Element;
import javax.lang.model.util.Elements;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.safety.Whitelist;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;

/**
 * Create a class called APIReader that can read information from APIs
 * 
 * @author shiao xiaoxuan wu
 */
public class APIReader {
	private String responseDetail;
	private String lurl;

	/**
	 * This method gets detailed responseBody of an API The API must be able to
	 * handle GET request. This method is used for lyrics API
	 * 
	 * @param word
	 * @param host
	 * @param rapidapiHost
	 * @param rapidapiKey
	 * @throws UnirestException
	 */
	public void lyricsAPI(String word, String host, String rapidapiHost, String rapidapiKey) throws UnirestException {
		String query = "q=" + word;
		HttpResponse<String> response = Unirest.get(host + "?" + query).header("x-rapidapi-host", rapidapiHost)
				.header("x-rapidapi-key", rapidapiKey).asString();
		responseDetail = response.getBody().toString();
	}

	/**
	 * This method returns a hashmap with name of the songs as keys and lyrics as values
	 * 
	 * @param apiResponseDetail
	 * @throws IOException
	 * @return lyricsHashMap
	 */
	public HashMap<String, String> lyricsGetter(String apiResponseDetail) throws IOException {
		int count = 0;
		int num = 0;
		String title = "";
		String url = "";
		String lyrics = "";
		HashMap<String, String> lyricsHashMap = new HashMap<String, String>();// null;
		//lyricsHashMap = new HashMap<String, String>();
		
		
		String[] values = apiResponseDetail.split("\"");
		//print out song's title
		for (String ss : values) {
			//System.out.println(ss);
			if (ss.equals("full_title")) {
				System.out.println("\n=============================================================\n");
				title = values[count + 2];
				System.out.println("Title: " + title);
			}
			if (ss.equals("url")) {
				url = values[count + 2];
				//print out lyrics url of songs
				if (!url.contains("artists")) {
					lurl = url;
				System.out.println("Lyrics url: " + lurl);
					//parse lyrics from the lyrics url above using Jsoup
					//userAgent needs to be updated per each request, otherwise will have http status 503 error
					//which is because the website thinks that the request is generated by non-human
				Document doc = Jsoup.connect(lurl).userAgent("Mozilla" + Integer.toString(num)).get();
					
								
					String body = doc.body().text();
					 //body = preserveBreaks(body);
					
					System.out.println(body);
					String[] text = body.split(",");
					//remove information after "More on Genius" as they are not lyrics 
					for (String txt : text) {
						//System.out.println(txt);
						if (!txt.contains("More on Genius")) {
							if (!txt.contains("{")) {
								lyrics = lyrics + txt;
							}
						} else {
							break;
						}
					}
					//create hashmap with name of songs as key and lyrics as value
					//lyricsHashMap = new HashMap<String, String>();
					lyricsHashMap.put(title, lyrics);
				//System.out.println("hashmap" + Arrays.asList(lyricsHashMap));
				}
			}
			lyrics = "";
			count++;
		}
		System.out.println("\n=============================================================\n");
		num++;
		return lyricsHashMap;
	}
	
	public static String preserveBreaks (String html) {
	    if(html==null)
	        return html;
	    Document document = Jsoup.parse(html);
	    document.outputSettings(new Document.OutputSettings().prettyPrint(false));//makes html() preserve linebreaks and spacing
	    document.select("br").append("\\n");
	    document.select("p").prepend("\\n\\n");
	    String s = document.html().replaceAll("\\\\n", "\n");
	    return Jsoup.clean(s, "", Whitelist.none(), new Document.OutputSettings().prettyPrint(false));
	}
	

	/**
	 * @return the response detail
	 */
	public String getResponseDetail() {
		return responseDetail;
	}
}
